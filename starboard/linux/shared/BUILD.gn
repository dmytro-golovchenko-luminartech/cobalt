# Copyright 2021 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

declare_args() {
  has_cdm = false
}

group("starboard_platform") {
  public_deps = [
    ":starboard_base_symbolize",
    ":starboard_platform_sources",
    "//starboard/common",
    "//starboard/shared/ffmpeg:ffmpeg_dynamic_load",
    "//starboard/shared/starboard/media:media_util",
    "//starboard/shared/starboard/player",
    "//third_party/boringssl:crypto",
    "//third_party/libevent",
    "//third_party/opus",
  ]

  if (sb_evergreen_compatible) {
    public_deps += [ "//starboard/elf_loader:evergreen_config" ]

    if (!sb_evergreen_compatible_lite) {
      public_deps += [ "//starboard/loader_app:pending_restart" ]
    }
  }

  if (sb_evergreen_compatible_libunwind) {
    public_deps += [ "//third_party/llvm-project/libunwind:unwind_starboard" ]
  }

  public_configs = [
    "//third_party/de265_includes",
    "//third_party/pulseaudio_includes",
  ]
}

static_library("starboard_base_symbolize") {
  sources = [
    "//base/third_party/symbolize/demangle.cc",
    "//base/third_party/symbolize/symbolize.cc",
  ]
  public_deps = [ "//starboard/elf_loader:evergreen_info" ]
}

source_set("starboard_platform_sources") {
  check_includes = false
  sources = []
  if (has_cdm) {
    # TODO(andrewsavage)
  } else {
    sources += [
      "//starboard/shared/stub/drm_close_session.cc",
      "//starboard/shared/stub/drm_create_system.cc",
      "//starboard/shared/stub/drm_destroy_system.cc",
      "//starboard/shared/stub/drm_generate_session_update_request.cc",
      "//starboard/shared/stub/drm_get_metrics.cc",
      "//starboard/shared/stub/drm_is_server_certificate_updatable.cc",
      "//starboard/shared/stub/drm_update_server_certificate.cc",
      "//starboard/shared/stub/drm_update_session.cc",
      "//starboard/shared/stub/media_is_supported.cc",
    ]
  }

  public_deps = [
    "//starboard:starboard_headers_only",
    "//starboard/shared/starboard/player/filter:filter_based_player_sources",
  ]
  configs += [ "//starboard/build/config:starboard_implementation" ]
}
